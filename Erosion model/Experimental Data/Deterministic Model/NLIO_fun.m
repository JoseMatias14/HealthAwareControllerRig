function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 11-Nov-2021 18:25:58.
% 
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 5xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.73110675005468;-4.46948475875232;-4.45396066189363;-2.7215822742063;-3.6952483850769];
x1_step1.gain = [0.577665179480862;0.208395588336176;0.234668224625366;0.402885386891299;0.266822575542922];
x1_step1.ymin = -1;

% Layer 1
b1 = [-3.6579783652621227219;-10.953904718353749459;0.57531937824306511597;1.7626972192892471636;0.69903768126504994829;25.346048275816599471;-6.7231855818824470816;-7.291408508150973411;-7.8671658911697530669;0.40720020299180348378;0.22090074002400741926;-0.95235090921732035163;-0.55245597575828986336;9.7930861930456742925;-2.6789648091887778847;-0.23647299623944248448;-1.3513719480995785016;0.90772138693394754938;0.23607765548607728689;-3.0651687430551128877;-0.19952869571892181688;11.38761553520214953;-1.5743053052916036183;7.844286740368879407;-11.861108049576342793];
IW1_1 = [-5.2386844165460786371 -0.048265052628785790056 -0.098286748332031048658 -0.44056296704068942383 -1.4272682239958736083;6.8826368299586597743 -0.087797603139359414737 0.22295934625200908297 2.09087299208620081 -8.583371597512776674;-1.4064125697962837069 -0.22868191103792939733 -0.23280978573811950127 -1.1563412041735039448 -8.0561647493957870836;-7.4795172575455826092 0.076098425296620364477 0.094367120544386645653 6.2261527259452336125 1.3657091037126252164;-2.6491960241421783628 -0.29976966190534171108 -0.15916879089077609621 -1.6380822990633150393 -10.729203395871408588;-27.401359632682598999 -0.090924971801460183207 0.26389415171592317533 2.7962262460129423403 -1.3155730505492340132;-10.121087035459824577 -0.17469957185008316847 -0.10710776050485093513 0.099792077668577228167 -2.9965120693333049395;2.6999918796083215433 -0.040202914689202458309 0.30299938449891178349 7.575448174770666121 -3.354394957447159431;2.9969039816325526715 -0.042809616660182042702 0.32865709167356405018 8.1046426821212556035 -3.827698881142777676;-2.3960837123894211942 0.038736635999167642885 -0.073089546582151804222 0.1420293460258429119 -0.27840178433655388135;1.8795441452028753826 0.15734795933744896712 0.18166478390823834199 -4.5623331356572647266 2.0462292101888261975;12.238054226817290271 -0.47586662480100361261 0.26853306150843825328 -4.4504677081375971781 -2.2693977736592438887;1.819498022618531996 0.25465694933241050935 0.18973759234667586515 1.2317237544606951527 8.4398447113596315461;11.005641950053147937 -0.043338580783989347212 0.013438780101932114655 -0.48675136999504442503 -0.019095025488966802657;-3.581515879686110182 -0.02482636754947721916 -0.10057910949607175299 -0.37951005170530777155 -0.96338065880999945723;4.525471298823998012 0.7482981607681268299 0.16226423829832464785 -5.4211636331715791215 3.5569425965106633569;4.5926482260770162824 -0.31939919604044192392 0.046429729624900530072 -6.4482658126901339912 -3.3959484902642680382;-3.4228302789565510089 -0.33523790620529397843 -0.14594016532857445601 -2.0894633943015339383 -13.393378587886912712;-4.8397717698951243648 -0.77182326358874542294 -0.20267658711909869451 5.8358217761573039084 -3.5333039292525332264;-3.0321895363589317363 0.20070804797772015537 0.013348553984252860619 8.2277316198581011975 0.41409048819568289312;-1.701128492942367787 -0.15387947270973209579 -0.16605013213713756826 4.0825369117096244054 -2.1339575265091390577;17.510216985296462866 0.42573641425593639065 0.24171746004520300311 -0.94251212439309484115 6.3173946532318119296;-7.0562914809814483164 -0.06075008370310496647 -0.26685942231627890475 3.5712353144062478627 -0.13046919136274601203;8.9043874723859293141 0.0089125458429335953359 0.031168723584626772949 -0.50127503872802692264 0.15074996122465558757;-11.559915647522753801 0.25192858012718055694 0.042395930804416073756 -1.7166098619250025337 0.071443551077339836897];

% Layer 2
b2 = 0.33963056254321927208;
LW2_1 = [-5.3016346069287303422 0.31640685838966930987 2.3058539048244233172 -0.20855038986123569655 6.5632467016327717957 -0.42816363990229522329 2.3592487303063069959 -2.2993537450439629488 2.1046130686702184676 0.82507831277984322593 -1.625114281953945472 0.15179407965154054216 6.2063485262685480492 -4.4986565620625853512 5.0609015464736346601 -1.9356640491594723219 -0.1927748079886754673 -2.8382307653280438586 -1.8463510081818608199 0.15382343138343787525 -1.6603149098766967207 0.70341288494909004481 -0.29147998618512771518 4.9252751507043557311 -0.96015302825757076199];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.692218221781655;
y1_step1.xoffset = -1.48750400518539;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
